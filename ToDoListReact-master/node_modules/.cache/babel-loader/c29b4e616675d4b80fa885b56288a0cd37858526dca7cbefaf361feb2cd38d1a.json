{"ast":null,"code":"import axios from 'axios';\n\n// הגדרת כתובת ה-API כ-default לכל הקריאות\nconst apiUrl = \"https://localhost:5119\";\n\n// הגדרת axios defaults\naxios.defaults.baseURL = apiUrl;\naxios.defaults.headers.common['Content-Type'] = 'application/json';\n\n// הוספת Interceptor לתפיסת שגיאות ב-response\naxios.interceptors.response.use(response => response,\n// אם הכל בסדר, מחזירים את התגובה כרגיל\nerror => {\n  // במקרה של שגיאה, לוג את השגיאה\n  console.error('API Error:', error.response ? error.response.data : error.message);\n  return Promise.reject(error); // מוחזר Promise עם השגיאה\n});\nexport default {\n  getTasks: async () => {\n    try {\n      const result = await axios.get('/tasks'); // נשתמש ב-baseURL\n      console.log(result.data);\n      return result.data;\n    } catch (error) {\n      console.error('Error getting tasks:', error);\n      return {\n        error: 'Failed to getting tasks'\n      };\n    }\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    try {\n      const response = await axios.post('/tasks', {\n        name\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding task:', error);\n      return {\n        error: 'Failed to add task'\n      };\n    }\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    try {\n      const response = await axios.put(`/tasks/${id}`, isComplete);\n      return response.data;\n    } catch (error) {\n      console.error('Error setting task completion:', error);\n      return {\n        error: 'Failed to update task'\n      };\n    }\n  },\n  deleteTask: async id => {\n    console.log('deleteTask', id);\n    try {\n      const response = await axios.delete(`/tasks/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      return {\n        error: 'Failed to delete task'\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","apiUrl","defaults","baseURL","headers","common","interceptors","response","use","error","console","data","message","Promise","reject","getTasks","result","get","log","addTask","name","post","setCompleted","id","isComplete","put","deleteTask","delete"],"sources":["C:/Users/The user/Desktop/practicode/ToDoList/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\n// הגדרת כתובת ה-API כ-default לכל הקריאות\nconst apiUrl = \"https://localhost:5119\"; \n\n// הגדרת axios defaults\naxios.defaults.baseURL = apiUrl;\naxios.defaults.headers.common['Content-Type'] = 'application/json';\n\n// הוספת Interceptor לתפיסת שגיאות ב-response\naxios.interceptors.response.use(\n  response => response,  // אם הכל בסדר, מחזירים את התגובה כרגיל\n  error => {\n    // במקרה של שגיאה, לוג את השגיאה\n    console.error('API Error:', error.response ? error.response.data : error.message);\n    return Promise.reject(error);  // מוחזר Promise עם השגיאה\n  }\n);\n\nexport default {\n  getTasks: async () => {\n    try {\n      const result = await axios.get('/tasks');  // נשתמש ב-baseURL\n      console.log(result.data);\n      return result.data;\n    } catch (error) {\n      console.error('Error getting tasks:', error);\n      return { error: 'Failed to getting tasks' };\n    }\n  },\n\n  addTask: async (name) => {\n    console.log('addTask', name);\n    try {\n      const response = await axios.post('/tasks', { name });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding task:', error);\n      return { error: 'Failed to add task' };\n    }\n  },\n\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n    try {\n      const response = await axios.put(`/tasks/${id}`, isComplete);\n      return response.data;\n    } catch (error) {\n      console.error('Error setting task completion:', error);\n      return { error: 'Failed to update task' };\n    }\n  },\n\n  deleteTask: async (id) => {\n    console.log('deleteTask', id);\n    try {\n      const response = await axios.delete(`/tasks/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      return { error: 'Failed to delete task' };\n    }\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,MAAM,GAAG,wBAAwB;;AAEvC;AACAD,KAAK,CAACE,QAAQ,CAACC,OAAO,GAAGF,MAAM;AAC/BD,KAAK,CAACE,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAG,kBAAkB;;AAElE;AACAL,KAAK,CAACM,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC7BD,QAAQ,IAAIA,QAAQ;AAAG;AACvBE,KAAK,IAAI;EACP;EACAC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACF,QAAQ,GAAGE,KAAK,CAACF,QAAQ,CAACI,IAAI,GAAGF,KAAK,CAACG,OAAO,CAAC;EACjF,OAAOC,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC,CAAC,CAAE;AACjC,CACF,CAAC;AAED,eAAe;EACbM,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAE;MAC3CP,OAAO,CAACQ,GAAG,CAACF,MAAM,CAACL,IAAI,CAAC;MACxB,OAAOK,MAAM,CAACL,IAAI;IACpB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO;QAAEA,KAAK,EAAE;MAA0B,CAAC;IAC7C;EACF,CAAC;EAEDU,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvBV,OAAO,CAACQ,GAAG,CAAC,SAAS,EAAEE,IAAI,CAAC;IAC5B,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMP,KAAK,CAACqB,IAAI,CAAC,QAAQ,EAAE;QAAED;MAAK,CAAC,CAAC;MACrD,OAAOb,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,OAAO;QAAEA,KAAK,EAAE;MAAqB,CAAC;IACxC;EACF,CAAC;EAEDa,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtCd,OAAO,CAACQ,GAAG,CAAC,cAAc,EAAE;MAAEK,EAAE;MAAEC;IAAW,CAAC,CAAC;IAC/C,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMP,KAAK,CAACyB,GAAG,CAAC,UAAUF,EAAE,EAAE,EAAEC,UAAU,CAAC;MAC5D,OAAOjB,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,OAAO;QAAEA,KAAK,EAAE;MAAwB,CAAC;IAC3C;EACF,CAAC;EAEDiB,UAAU,EAAE,MAAOH,EAAE,IAAK;IACxBb,OAAO,CAACQ,GAAG,CAAC,YAAY,EAAEK,EAAE,CAAC;IAC7B,IAAI;MACF,MAAMhB,QAAQ,GAAG,MAAMP,KAAK,CAAC2B,MAAM,CAAC,UAAUJ,EAAE,EAAE,CAAC;MACnD,OAAOhB,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,OAAO;QAAEA,KAAK,EAAE;MAAwB,CAAC;IAC3C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}